{{- if .Values.rabbitmq.enabled -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mq
  template:
    metadata:
      labels:
        app: mq
    spec:
      volumes:
        - name: rabbitmq-volume
          persistentVolumeClaim:
            claimName: rabbitmq-volume
      containers:
        - name: mq
          image: {{ .Values.rabbitmq.image }}
          ports:
            - containerPort: 4369
            - containerPort: 5672
          volumeMounts:
            - name: rabbitmq-volume
              mountPath: /var/lib/rabbitmq
          env:
            - name: TZ
              value: "Europe/Zurich"
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                secretKeyRef:
                  name: {{  .Values.rabbitmq.secret_name }}
                  key: RABBITMQ_DEFAULT_PASS
          {{- if .Values.rabbitmq.resources }}
          resources: {{- toYaml .Values.rabbitmq.resources | nindent 12 }}
          {{- end }}
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - '-c'
                - rabbitmq-diagnostics -q check_running && rabbitmq-diagnostics -q check_local_alarms
            initialDelaySeconds: 25
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - '-c'
                - rabbitmq-diagnostics -q ping
            initialDelaySeconds: 5
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
{{- end -}}
