---
{{- if .Capabilities.APIVersions.Has "apps.openshift.io/v1/DeploymentConfig" }}
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
{{- else }}
apiVersion: apps/v1
kind: Deployment
{{- end }}
metadata:
  name: web
spec:
  replicas: {{ .Values.web.replicas }}
  {{- if not (.Capabilities.APIVersions.Has "apps.openshift.io/v1/DeploymentConfig") }}
  selector:
    matchLabels:
      app: web
  {{- end }}
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
      - name: web
        image: {{ .Values.web.image }}
        command: [
            "/bin/bash",
            "-c",
            "cp -R {{ .Values.web.assets.location }}/. /opt/nginx-invenio-assets/ &&
        uwsgi --ini /opt/invenio/src/uwsgi/uwsgi.ini",
        ]
        envFrom:
        - configMapRef:
            name: invenio-config
        env:
        - name: TZ
          value: "Europe/Zurich"
        - name: INVENIO_BROKER_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.rabbitmq.secret_name }}
              key: CELERY_BROKER_URL
        - name: INVENIO_CELERY_BROKER_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.rabbitmq.secret_name }}
              key: CELERY_BROKER_URL
        - name: INVENIO_SQLALCHEMY_DATABASE_URI
          valueFrom:
            secretKeyRef:
              name: {{ .Values.postgresql.secret_name }}
              key: SQLALCHEMY_DB_URI
        - name: INVENIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: invenio-secrets
              key: INVENIO_SECRET_KEY
        {{- if not .Values.search.enabled }}
        - name: INVENIO_SEARCH_HOSTS
          valueFrom:
            secretKeyRef:
              name: {{ .Values.search.secret_name }}
              key: INVENIO_SEARCH_HOSTS
        {{- end }}
        {{- if .Values.invenio.logging.sentry.enabled }}
        - name: INVENIO_SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.invenio.logging.sentry.secret_name }}
              key: SENTRY_DSN
        {{- end }}
        {{- if .Values.invenio.datacite.enabled }}
        - name: DATACITE_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.invenio.datacite.secret_name }}
              key: DATACITE_USERNAME
        - name: DATACITE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.invenio.datacite.secret_name }}
              key: DATACITE_PASSWORD
        {{- end }}
        {{- if .Values.invenio.remote_apps.enabled }}
        {{- range .Values.invenio.remote_apps.credentials }}
        - name: {{ default (printf "INVENIO_%s_APP_CREDENTIALS" .name) }}
          valueFrom:
            secretKeyRef:
              name: {{ $.Values.invenio.remote_apps.secret_name }}
              key: {{ default (printf "INVENIO_%s_APP_CREDENTIALS" .name) }}
        {{- end }}
        {{- end }}
        readinessProbe:
          exec:
            command:
              - /bin/bash
              - -c
              - "uwsgi_curl $(hostname):5000 /ping -H 'Host: {{ .Values.host }}'"
          failureThreshold: 3
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        livenessProbe:
          exec:
            command:
              - /bin/bash
              - -c
              - "uwsgi_curl $(hostname):5000 /ping -H 'Host: {{ .Values.host }}'"
          failureThreshold: 1
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        volumeMounts:
        - name: uwsgi-config
          mountPath: '/opt/invenio/src/uwsgi'
        - name: nginx-invenio-assets
          mountPath: /opt/nginx-invenio-assets
        {{- if .Values.persistence.enabled }}
        - mountPath: /opt/invenio/var/instance/data
          name: shared-volume
        {{- end }}
        {{- if .Values.web.resources }}
        resources: {{- toYaml .Values.web.resources | nindent 10 }}
        {{- end }}
      - name: nginx
        image: nginx
        env:
        - name: TZ
          value: "Europe/Zurich"
        ports:
        - containerPort: 8080
          protocol: TCP
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
        - name: var-run
          mountPath: /var/run
        - name: var-cache-nginx
          mountPath: /var/cache/nginx
        - name: var-log-nginx
          mountPath: /var/log/nginx
        - name: nginx-invenio-assets
          mountPath: "{{ .Values.nginx.assets.location }}"
          readOnly: true
        readinessProbe:
          httpGet:
            path: /ping
            port: 8080
          initialDelaySeconds: 15
          timeoutSeconds: 1
        {{- if .Values.nginx.resources }}
        resources: {{- toYaml .Values.nginx.resources | nindent 10 }}
        {{- end }}
      {{- if .Values.logstash.enabled }}
      - name: filebeat
        image: {{ .Values.logstash.filebeat_image }}
        args: [
            "-c", "/etc/filebeat.yml",
            "-e",
        ]
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: config
          mountPath: /etc/filebeat.yml
          readOnly: true
          subPath: filebeat.yml
        - name: var-log-nginx
          mountPath: /var/log/nginx
          readOnly: true
      {{- end }}
      volumes:
      {{- if .Values.logstash.enabled }}
      - name: config
        configMap:
          defaultMode: 0600
          name: filebeat-config
      {{- end }}
      - name: nginx-config
        configMap:
          defaultMode: 420
          name: nginx-config
      - name: var-run
        emptyDir: {}
      - name: var-cache-nginx
        emptyDir: {}
      - name: var-log-nginx
        emptyDir: {}
      - name: uwsgi-config
        configMap:
          defaultMode: 420
          name: uwsgi-config
      - name: nginx-invenio-assets
        emptyDir: {}
      {{- if .Values.persistence.enabled }}
      - name: shared-volume
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.name }}
      {{- end }}
      {{- if .Values.web.imagePullSecret }}
      imagePullSecrets:
        - name: {{ .Values.web.imagePullSecret }}
      {{- end }}
