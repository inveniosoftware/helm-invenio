---
{{- if not (.Values.rabbitmq.invenio.existing_secret) }}
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: {{ .Values.rabbitmq.invenio.secret_name }}
  labels:
    app: {{ .Values.rabbitmq.invenio.secret_name }}
  annotations:
    helm.sh/resource-policy: keep
data:
  RABBITMQ_DEFAULT_PASS: {{ .Values.rabbitmq.auth.password | b64enc }}
  CELERY_BROKER_URL: {{ (printf "amqp://%s:%s@%s:%s" .Values.rabbitmq.auth.username .Values.rabbitmq.auth.password (include "rabbitmq.host_name" .) (.Values.rabbitmq.service.ports.amqp | toString)) | b64enc }}

---
{{- end -}}
{{- if not (.Values.postgresql.invenio.existing_secret) }}
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: {{ .Values.postgresql.global.postgresql.auth.existingSecret }}
  labels:
    app: {{ .Values.postgresql.global.postgresql.auth.existingSecret }}
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/resource-policy: keep
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
data:
  POSTGRESQL_USER: {{ .Values.postgresql.global.postgresql.auth.username | b64enc }}
  POSTGRESQL_PASSWORD: {{ .Values.postgresql.global.postgresql.auth.password | b64enc }}
  POSTGRESQL_PORT: {{ .Values.postgresql.invenio.port | toString | b64enc }}
  POSTGRESQL_DATABASE: {{ .Values.postgresql.global.postgresql.auth.database | b64enc }}
  POSTGRESQL_HOST: {{ include "postgresql.host_name" . | b64enc }}
  SQLALCHEMY_DB_URI: {{ (printf "postgresql+psycopg2://%s:%s@%s:%s/%s" .Values.postgresql.global.postgresql.auth.username .Values.postgresql.global.postgresql.auth.password (include "postgresql.host_name" .) (.Values.postgresql.primary.service.ports.postgresql | toString) .Values.postgresql.global.postgresql.auth.database) | b64enc }}
---
{{- end -}}
{{- if not (.Values.search.invenio.existing_secret) }}
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: {{ .Values.search.invenio.secret_name }}
  labels:
    app: {{ .Values.search.invenio.secret_name }}
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/resource-policy: keep
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
data:
  SEARCH_USER: {{ .Values.search.invenio.user | b64enc }}
  SEARCH_PASSWORD: {{ .Values.search.invenio.password | b64enc }}
  INVENIO_SEARCH_HOSTS: {{ (printf "[{'host': '%s'}]" (include "search.host_name" .)) | b64enc }}

---
{{- end -}}
{{- if and (.Values.invenio.sentry.enabled) (not .Values.invenio.sentry.existing_secret) }}
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: {{ .Values.invenio.sentry.secret_name }}
  labels:
    app: {{ .Values.invenio.sentry.secret_name }}
  annotations:
    helm.sh/resource-policy: keep
data:
  SENTRY_DSN: {{ .Values.invenio.sentry.dsn | b64enc }}

---
{{- end -}}
{{- if and (.Values.invenio.remote_apps.enabled) (not .Values.invenio.remote_apps.existing_secret) }}
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: {{ .Values.invenio.remote_apps.secret_name }}
  labels:
    app: {{ .Values.invenio.remote_apps.secret_name }}
  annotations:
    helm.sh/resource-policy: keep
data:
  {{- range .Values.invenio.remote_apps.credentials }}
  {{ default (printf "INVENIO_%s_APP_CREDENTIALS" .name) }}: {{ printf "{\"consumer_key\": \"%s\" , \"consumer_secret\": \"%s\"}" .consumer_key .consumer_secret | b64enc }}
  {{- end }}

---
{{- end -}}
{{- if not (.Values.invenio.existing_secret) }}
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: invenio-secrets
  labels:
    app: invenio-secrets
  annotations:
    helm.sh/resource-policy: keep
data:
  INVENIO_SECRET_KEY: {{ .Values.invenio.secret_key | b64enc }}
  INVENIO_SECURITY_LOGIN_SALT: {{ .Values.invenio.security_login_salt | b64enc }}
  INVENIO_CSRF_SECRET_SALT: {{ .Values.invenio.csrf_secret_salt | b64enc }}

---
{{- end -}}
{{- if and (.Values.invenio.datacite.enabled) (not .Values.invenio.datacite.existing_secret)}}
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: datacite-secrets
  labels:
    app: datacite-secrets
  annotations:
    helm.sh/resource-policy: keep
data:
  DATACITE_PASSWORD: {{ .Values.invenio.datacite.password | b64enc }}
  DATACITE_USERNAME: {{ .Values.invenio.datacite.username | b64enc }}
{{- end -}}
