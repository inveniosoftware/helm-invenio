---

global:
  timezone: "Europe/Zurich"

ingress:
  annotations: {}
  enabled: false
  class: ""
  tlsSecretNameOverride: ""

invenio:
  hostname: ""
  secret_key: ""
  security_login_salt: ""
  csrf_secret_salt: ""
  existing_secret: false
  init: false
  default_users: []  # Requires invenio.init=true
  demo_data: false  # Setting invenio.demo_data=true requires also setting default_users!
  sentry:
    enabled: false
    existing_secret: false
    secret_name: "sentry-secrets"
    dsn: ""
  datacite:
    enabled: false
    existing_secret: false
    secret_name: "datacite-secrets"
  podSecurityContext:
    enabled: true
  remote_apps:
    enabled: false
    existing_secret: false
    secret_name: "remote-apps-secrets"
    credentials:
      - name: ""
        consumer_key: ""
        consumer_secret: ""
  extra_config: {}
  extra_env_from_secret: []
    # - name: NAME_OF_MY_ENV_VAR
    #   valueFrom:
    #     secretKeyRef:
    #       name: name-of-my-secret
    #       key: KEY_IN_MY_SECRET

haproxy:
  enabled: true
  image: "haproxy:2.8.3"
  replicas: 2
  maxconn: 100
  maxconn_static: 500
  resources:
    requests:
      cpu: 250m
      memory: 500Mi
    limits:
      cpu: 250m
      memory: 500Mi
  denied_ips: ""
  denied_uas: ""
  extra_frontend_public_http_request: ""
  http429_response: "You are being blocked. Please contact us."
  html_backup_website: |-
    <!DOCTYPE html>
    <html>
      <body>
          <h1>503 Service Unavailable</h1>
          <p>Under maintenance!</p>
      </body>
    </html>

nginx:
  image: "nginx:1.24.0"
  max_conns: 100
  assets:
    location: /opt/invenio/var/instance/static
  records:
    client_max_body_size: 100m
  files:
    client_max_body_size: 50G
  resources:
    requests:
      cpu: 250m
      memory: 500Mi
    limits:
      cpu: 250m
      memory: 500Mi
  extra_server_config: ""
  denied_ips: ""
  denied_uas: ""

web:
  image: "ghcr.io/inveniosoftware/demo-inveniordm/demo-inveniordm:v12.0.0-beta.1.3"
  imagePullSecret: ""
  replicas: 6
  terminationGracePeriodSeconds: 60
  uwsgi:
    processes: 6
    threads: 4
  autoscaler:
    enabled: false
    scaler_cpu_utilization: 65
    max_web_replicas: 10
    min_web_replicas: 2
  readinessProbe:
    failureThreshold: 3
    initialDelaySeconds: 5
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 1
  startupProbe:
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 5
  assets:
    location: /opt/invenio/var/instance/static
  resources:
    requests:
      cpu: 500m
      memory: 500Mi
    limits:
      cpu: 1000m
      memory: 1Gi
  initContainers:
    resources:
      requests:
        cpu: '1'
        memory: 100Mi
      limits:
        cpu: '1'
        memory: 100Mi
  annotations: []

worker:
  enabled: true
  image: "ghcr.io/inveniosoftware/demo-inveniordm/demo-inveniordm:v12.0.0-beta.1.3"
  imagePullSecret: ""
  app: invenio_app.celery
  concurrency: 2
  log_level: INFO
  replicas: 2
  run_mount_path: /var/run/celery
  celery_pidfile: /var/run/celery/celerybeat.pid
  celery_schedule: /var/run/celery/celery-schedule
  resources:
    requests:
      cpu: 500m
      memory: 500Mi
    limits:
      cpu: 1000m
      memory: 1Gi
  volumes:
    enabled: false

workerBeat:
  resources:
    requests:
      cpu: 500m
      memory: 200Mi
    limits:
      cpu: "2"
      memory: 500Mi

persistence:
  enabled: true
  name: "shared-volume"
  access_mode: ReadWriteMany
  annotations: {}
  size: 10G
  storage_class: ""
  useExistingClaim: false

redis:
  enabled: true
  auth:
    enabled: false  # Dangerous! This lets Invenio connect to Redis unauthenticated!
  master:
    disableCommands: []  # Dangerous! This lets us run the `FLUSHALL` and `FLUSHDB` commands! Unfortunately, they are required by the wipe_recreate.sh script when installing Invenio.
    resources:
      limits:
        cpu: "1"
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 500Mi
  replica:
    disableCommands: []  # Dangerous! This lets us run the `FLUSHALL` and `FLUSHDB` commands! Unfortunately, they are required by the wipe_recreate.sh script when installing Invenio.
    resources:
      limits:
        cpu: "1"
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 500Mi

rabbitmq:
  enabled: true
  auth:
    password: ""
  resources:
    limits:
      cpu: "1"
      memory: 2Gi
    requests:
      cpu: "1"
      memory: 2Gi

rabbitmqExternal: {}

flower:
  enabled: true
  image: "mher/flower:2.0"
  secret_name: "flower-secrets"
  default_username: "flower"
  default_password: "flower_password"
  host: ""
  resources:
    requests:
      memory: 125Mi
      cpu: 0.02
    limits:
      memory: 250Mi
      cpu: 0.1

postgresql:
  enabled: true
  auth:
    username: invenio
    database: invenio

postgresqlExternal: {}

opensearch:
  enabled: true

externalOpensearch: {}

logstash:
  enabled: false
  filebeat_image: "docker.elastic.co/beats/filebeat-oss:8.10.2"
  filebeat_resources:
    limits:
      memory: 200Mi
    requests:
      cpu: 100m
      memory: 100Mi
  logstash_image: "docker.elastic.co/logstash/logstash-oss:8.10.2"
  environment: "qa"
  cern_monit:
    enabled: false
    producer: "invenio"

kerberos:
  enabled: false
  secret_name: ""
  image: ""
  args: []
  initArgs: []
  resources:
    limits:
      cpu: 100m
      memory: 20Mi
    requests:
      cpu: 10m
      memory: 2Mi
