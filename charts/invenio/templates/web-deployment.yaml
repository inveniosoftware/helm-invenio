---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "invenio.fullname" . }}-web
  labels:
    {{- include "invenio.labels" . | nindent 4 }}
    app.kubernetes.io/component: web
spec:
  {{- with .Values.web.deploymentSpec.minReadySeconds }}
  minReadySeconds: {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.web.deploymentSpec.paused }}
  paused: {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.web.deploymentSpec.progressDeadlineSeconds }}
  progressDeadlineSeconds: {{- toYaml . | nindent 4 }}
  {{- end }}
  replicas: {{ .Values.web.replicas }}
  {{- with .Values.web.deploymentSpec.revisionHistoryLimit }}
  revisionHistoryLimit: {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/component: web
  {{- with .Values.web.deploymentSpec.strategy }}
  strategy: {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      annotations:
        app.kubernetes.io/component: web
        checksum/invenio-config: {{ include (print $.Template.BasePath "/invenio-configmap.yaml") . | sha256sum }}
        checksum/nginx-configmap: {{ include (print $.Template.BasePath "/nginx-configmap.yaml") . | sha256sum }}
        checksum/uwsgi-configmap: {{ include (print $.Template.BasePath "/uwsgi-configmap.yaml") . | sha256sum }}
        {{- with .Values.web.podAnnotations }}
          {{- tpl (toYaml .) $ | nindent 8 }}
        {{- end }}
      labels:
        {{- with .Values.web.podLabels }}
          {{- tpl (toYaml .) $ | nindent 8 }}
        {{- end }}
        app.kubernetes.io/component: web
    spec:
      terminationGracePeriodSeconds: {{ .Values.web.terminationGracePeriodSeconds }}
      {{- with .Values.web.nodeSelector }}
      nodeSelector:
        {{- tpl (toYaml .) $ | nindent 8 -}}
      {{- end }}
      {{- with .Values.web.tolerations }}
      tolerations:
        {{- tpl (toYaml .) $ | nindent 8 -}}
      {{- end }}
      containers:
      - name: web
        image: {{ default .Values.web.image (include "invenio.image" .) }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        command: [
            "/bin/bash",
            "-c",
            "uwsgi --ini /opt/invenio/src/uwsgi/uwsgi.ini",
        ]
        resources: {{- toYaml .Values.web.resources | nindent 10 }}
        envFrom:
        - configMapRef:
            name: {{ include "invenio.fullname" . }}-config
        - secretRef:
            name: {{ include "invenio.secretName" . }}
        {{- with .Values.invenio.extraEnvFrom }}
        {{- tpl (. | toYaml) $ | nindent 8 }}
        {{- end }}
        {{- with .Values.web.extraEnvFrom }}
        {{- tpl (. | toYaml) $ | nindent 8 }}
        {{- end }}
        env:
        - name: TZ
          value: {{ required "Missing .Values.global.timezone" .Values.global.timezone }}
        {{- include "invenio.config.queue" . | nindent 8 }}
        {{- include "invenio.config.database" . | nindent 8 }}
        {{- with .Values.invenio.extraEnvVars }}
        {{-  toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.web.extraEnvVars }}
        {{-  toYaml . | nindent 8 }}
        {{- end }}
        {{- include "invenio.config.sentry" . | nindent 8 }}
        {{- include "invenio.config.datacite" . | nindent 8 }}
        {{- if .Values.invenio.remote_apps.enabled }}
        {{- range .Values.invenio.remote_apps.credentials }}
        - name: {{ default (printf "INVENIO_%s_APP_CREDENTIALS" .name) }}
          valueFrom:
            secretKeyRef:
              name: {{ $.Values.invenio.remote_apps.secret_name }}
              key: {{ default (printf "INVENIO_%s_APP_CREDENTIALS" .name) }}
        {{- end }}
        {{- end }}
        {{- range .Values.invenio.extra_env_from_secret }}
        - name: {{ .name }}
          valueFrom:
            secretKeyRef:
              name: {{ .valueFrom.secretKeyRef.name }}
              key: {{ .valueFrom.secretKeyRef.key }}
        {{- end }}
        livenessProbe: {{- tpl (.Values.web.livenessProbe | toYaml) $ | nindent 10 }}
        readinessProbe: {{- tpl (.Values.web.readinessProbe | toYaml) $ | nindent 10 }}
        startupProbe: {{- tpl (.Values.web.startupProbe | toYaml) $ | nindent 10 }}
        volumeMounts:
          - name: uwsgi-config
            mountPath: '/opt/invenio/src/uwsgi'
          - name: nginx-invenio-assets
            mountPath: /opt/nginx-invenio-assets
          {{- if .Values.persistence.enabled }}
          - mountPath: /opt/invenio/var/instance/data
            name: shared-volume
            subPath: data
          - mountPath: /opt/invenio/var/instance/profiler
            name: shared-volume
            subPath: profiler
          {{- end }}
          {{- if .Values.kerberos.enabled }}
          - name: kerberos-credentials-cache
            mountPath: /tmp
          {{- end }}
          {{- range $key, $value := .Values.invenio.vocabularies }}
          - name: vocabularies
            mountPath: "/opt/invenio/var/instance/app_data/vocabularies/{{ $key }}"
            subPath: "{{ $key }}"
          {{- end }}
          {{- range .Values.web.extraVolumeMounts }}
          - {{ toYaml . | nindent 12 }}
          {{- end }}
        securityContext:
          {{- with .Values.web.securityContext }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
      - name: nginx
        image: {{ required "Missing .Values.nginx.image" .Values.nginx.image }}
        env:
        - name: TZ
          value: {{ required "Missing .Values.global.timezone" .Values.global.timezone }}
        ports:
        - containerPort: 8080
          protocol: TCP
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
        - name: var-run
          mountPath: /var/run
        - name: var-cache-nginx
          mountPath: /var/cache/nginx
        - name: var-log-nginx
          mountPath: /var/log/nginx
        - name: nginx-invenio-assets
          mountPath: "{{ .Values.nginx.assets.location }}"
          readOnly: true
        readinessProbe:
          httpGet:
            path: /ping
            port: 8080
          initialDelaySeconds: 15
          timeoutSeconds: 1
        resources: {{- toYaml .Values.nginx.resources | nindent 10 }}
        securityContext:
          {{- with .Values.nginx.securityContext }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
      {{- if .Values.logstash.enabled }}
      - name: filebeat
        image: {{ required ".Values.logstash.filebeat_image" .Values.logstash.filebeat_image }}
        args: [
            "-c", "/etc/filebeat.yml",
            "-e",
        ]
        resources: {{- toYaml .Values.logstash.filebeat_resources | nindent 10 }}
        volumeMounts:
        - name: config
          mountPath: /etc/filebeat.yml
          readOnly: true
          subPath: filebeat.yml
        - name: var-log-nginx
          mountPath: /var/log/nginx
          readOnly: true
        securityContext:
          {{- with .Values.logstash.securityContext }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
      {{- end }}
      {{- if .Values.kerberos.enabled }}
      - name: kerberos-credentials
        image: {{ required "Missing .Values.kerberos.image" .Values.kerberos.image }}
        args: {{ .Values.kerberos.args }}
        envFrom:
          - secretRef:
              name: {{ .Values.kerberos.secret_name }}
        resources: {{- toYaml .Values.kerberos.resources | nindent 10 }}
        {{- if .Values.kerberos.readinessProbe }}
        readinessProbe: {{- toYaml .Values.kerberos.readinessProbe | nindent 10 }}
        {{- end }}
        {{- if .Values.kerberos.livenessProbe }}
        livenessProbe: {{- toYaml .Values.kerberos.livenessProbe | nindent 10 }}
        {{- end }}
        volumeMounts:
          - name: kerberos-credentials-cache
            mountPath: /tmp
        securityContext:
          {{- with .Values.kerberos.securityContext }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
      {{- end }}
      initContainers:
        # copy assets from uwsgi to nginx
        - name: copy-web-assets
          image: {{ default .Values.web.image (include "invenio.image" .) }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command: [
              "/bin/bash",
              "-c",
              "cp -R {{ .Values.web.assets.location }}/. /opt/nginx-invenio-assets/",
          ]
          resources: {{- toYaml .Values.web.initContainers.resources | nindent 12 }}
          securityContext:
            {{- with .Values.web.initContainers.securityContext }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          volumeMounts:
            - name: nginx-invenio-assets
              mountPath: /opt/nginx-invenio-assets
        {{- if .Values.kerberos.enabled }}
        # Init kerberos credentials
        - name: init-kerberos-credentials
          image: {{ required "Missing .Values.kerberos.image" .Values.kerberos.image }}
          args: {{ .Values.kerberos.initArgs }}
          envFrom:
            - secretRef:
                name: {{ .Values.kerberos.secret_name }}
          resources: {{- toYaml .Values.kerberos.initContainers.resources | nindent 12 }}
          volumeMounts:
            - name: kerberos-credentials-cache
              mountPath: /tmp
          securityContext:
            {{- with .Values.web.initContainers.securityContext }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
        {{- end }}
      securityContext:
        {{- with .Values.web.podSecurityContext }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      volumes:
      {{- if .Values.logstash.enabled }}
      - name: config
        configMap:
          defaultMode: 0600
          name: filebeat-config
      {{- end }}
      - name: nginx-config
        configMap:
          defaultMode: 420
          name: {{ include "invenio.fullname" . }}-nginx-config
      - name: var-run
        emptyDir: {}
      - name: var-cache-nginx
        emptyDir: {}
      - name: var-log-nginx
        emptyDir: {}
      - name: uwsgi-config
        configMap:
          defaultMode: 420
          name: {{ include "invenio.fullname" . }}-uwsgi-config
      - name: nginx-invenio-assets
        emptyDir: {}
      {{- if .Values.persistence.enabled }}
      - name: shared-volume
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.name }}
      {{- end }}
      {{- if .Values.kerberos.enabled }}
      - name: kerberos-credentials-cache
        emptyDir: {}
      {{- end }}
      {{- if .Values.invenio.vocabularies }}
      - name: vocabularies
        configMap:
          name: "{{ include "invenio.fullname" . }}-vocabularies"
      {{- end }}
      {{- range .Values.web.extraVolumes }}
      - {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.web.imagePullSecret }}
      imagePullSecrets:
        - name: {{ .Values.web.imagePullSecret }}
      {{- end }}
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
