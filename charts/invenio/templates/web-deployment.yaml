---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
spec:
  replicas: {{ .Values.web.replicas }}
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      terminationGracePeriodSeconds: {{ .Values.web.terminationGracePeriodSeconds }}
      containers:
      - name: web
        image: {{ required "Missing .Values.web.image" .Values.web.image }}
        command: [
            "/bin/bash",
            "-c",
            "uwsgi --ini /opt/invenio/src/uwsgi/uwsgi.ini",
        ]
        {{- if .Values.web.resources }}
        resources: {{- toYaml .Values.web.resources | nindent 10 }}
        {{- end }}
        envFrom:
        - configMapRef:
            name: invenio-config
        env:
        - name: TZ
          value: {{ required "Missing .Values.global.timezone" .Values.global.timezone }}
        - name: INVENIO_BROKER_URL
          value: {{ include "invenio.rabbitmq.uri" . }}
        - name: INVENIO_CELERY_BROKER_URL
          value: {{ include "invenio.rabbitmq.uri" . }}
        - name: INVENIO_SQLALCHEMY_DATABASE_URI
          value: {{ include "invenio.sqlAlchemyDbUri" . }}
        - name: INVENIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: invenio-secrets
              key: INVENIO_SECRET_KEY
        - name: INVENIO_SECURITY_LOGIN_SALT
          valueFrom:
            secretKeyRef:
              name: invenio-secrets
              key: INVENIO_SECURITY_LOGIN_SALT
        - name: INVENIO_CSRF_SECRET_SALT
          valueFrom:
            secretKeyRef:
              name: invenio-secrets
              key: INVENIO_CSRF_SECRET_SALT
        {{- if .Values.invenio.sentry.enabled }}
        - name: INVENIO_SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.invenio.sentry.secret_name }}
              key: SENTRY_DSN
        {{- end }}
        {{- if .Values.invenio.datacite.enabled }}
        - name: INVENIO_DATACITE_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.invenio.datacite.secret_name }}
              key: DATACITE_USERNAME
        - name: INVENIO_DATACITE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.invenio.datacite.secret_name }}
              key: DATACITE_PASSWORD
        {{- end }}
        {{- if .Values.invenio.remote_apps.enabled }}
        {{- range .Values.invenio.remote_apps.credentials }}
        - name: {{ default (printf "INVENIO_%s_APP_CREDENTIALS" .name) }}
          valueFrom:
            secretKeyRef:
              name: {{ $.Values.invenio.remote_apps.secret_name }}
              key: {{ default (printf "INVENIO_%s_APP_CREDENTIALS" .name) }}
        {{- end }}
        {{- end }}
        {{- range .Values.invenio.extra_env_from_secret }}
        - name: {{ .name }}
          valueFrom:
            secretKeyRef:
              name: {{ .valueFrom.secretKeyRef.name }}
              key: {{ .valueFrom.secretKeyRef.key }}
        {{- end }}
        readinessProbe:
          exec:
            command:
              - /bin/bash
              - -c
              - "uwsgi_curl -X HEAD -H 'Host: {{ include "invenio.hostname" $ }}' $(hostname):5000 /ping"
          failureThreshold: {{ .Values.web.readinessProbe.failureThreshold }}
          initialDelaySeconds: {{ .Values.web.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.web.readinessProbe.periodSeconds }}
          successThreshold: {{ .Values.web.readinessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.web.readinessProbe.timeoutSeconds }}
        startupProbe:
          exec:
            command:
              - /bin/bash
              - -c
              - "uwsgi_curl -X HEAD -H 'Host: {{ include "invenio.hostname" $ }}' $(hostname):5000 /ping"
          failureThreshold: {{ .Values.web.startupProbe.failureThreshold }}
          initialDelaySeconds: {{ .Values.web.startupProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.web.startupProbe.periodSeconds }}
          successThreshold: {{ .Values.web.startupProbe.successThreshold }}
          timeoutSeconds: {{ .Values.web.startupProbe.timeoutSeconds }}
        volumeMounts:
          - name: uwsgi-config
            mountPath: '/opt/invenio/src/uwsgi'
          - name: nginx-invenio-assets
            mountPath: /opt/nginx-invenio-assets
          {{- if .Values.persistence.enabled }}
          - mountPath: /opt/invenio/var/instance/data
            name: shared-volume
            subPath: data
          - mountPath: /opt/invenio/var/instance/profiler
            name: shared-volume
            subPath: profiler
          {{- end }}
          {{- if .Values.kerberos.enabled }}
          - name: kerberos-credentials-cache
            mountPath: /tmp
          {{- end }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
      - name: nginx
        image: {{ required "Missing .Values.nginx.image" .Values.nginx.image }}
        env:
        - name: TZ
          value: {{ required "Missing .Values.global.timezone" .Values.global.timezone }}
        ports:
        - containerPort: 8080
          protocol: TCP
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
        - name: var-run
          mountPath: /var/run
        - name: var-cache-nginx
          mountPath: /var/cache/nginx
        - name: var-log-nginx
          mountPath: /var/log/nginx
        - name: nginx-invenio-assets
          mountPath: "{{ .Values.nginx.assets.location }}"
          readOnly: true
        readinessProbe:
          httpGet:
            path: /ping
            port: 8080
          initialDelaySeconds: 15
          timeoutSeconds: 1
        {{- if .Values.nginx.resources }}
        resources: {{- toYaml .Values.nginx.resources | nindent 10 }}
        {{- end }}
      {{- if .Values.logstash.enabled }}
      - name: filebeat
        image: {{ required ".Values.logstash.filebeat_image" .Values.logstash.filebeat_image }}
        args: [
            "-c", "/etc/filebeat.yml",
            "-e",
        ]
        resources: {{- toYaml .Values.logstash.filebeat_resources | nindent 10 }}
        volumeMounts:
        - name: config
          mountPath: /etc/filebeat.yml
          readOnly: true
          subPath: filebeat.yml
        - name: var-log-nginx
          mountPath: /var/log/nginx
          readOnly: true
      {{- end }}
      {{- if .Values.kerberos.enabled }}
      - name: kerberos-credentials
        image: {{ required "Missing .Values.kerberos.image" .Values.kerberos.image }}
        args: {{ .Values.kerberos.args }}
        envFrom:
          - secretRef:
              name: {{ .Values.kerberos.secret_name }}
        resources: {{- toYaml .Values.kerberos.resources | nindent 10 }}
        {{- if .Values.kerberos.readinessProbe }}
        readinessProbe: {{- toYaml .Values.kerberos.readinessProbe | nindent 10 }}
        {{- end }}
        {{- if .Values.kerberos.livenessProbe }}
        livenessProbe: {{- toYaml .Values.kerberos.livenessProbe | nindent 10 }}
        {{- end }}
        volumeMounts:
          - name: kerberos-credentials-cache
            mountPath: /tmp
      {{- end }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
      initContainers:
        # copy assets from uwsgi to nginx
        - name: copy-web-assets
          image: {{ required "Missing .Values.web.image" .Values.web.image }}
          command: [
              "/bin/bash",
              "-c",
              "cp -R {{ .Values.web.assets.location }}/. /opt/nginx-invenio-assets/",
          ]
         {{- if .Values.web.initContainers.resources }}
          resources:
            {{- toYaml .Values.web.initContainers.resources | nindent 12 }}
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: nginx-invenio-assets
              mountPath: /opt/nginx-invenio-assets
        {{- if .Values.kerberos.enabled }}
        # Init kerberos credentials
        - name: init-kerberos-credentials
          image: {{ required "Missing .Values.kerberos.image" .Values.kerberos.image }}
          args: {{ .Values.kerberos.initArgs }}
          envFrom:
            - secretRef:
                name: {{ .Values.kerberos.secret_name }}
          resources: {{- toYaml .Values.kerberos.resources | nindent 12 }}
          volumeMounts:
            - name: kerberos-credentials-cache
              mountPath: /tmp
        {{- end }}
      {{- if .Values.invenio.podSecurityContext.enabled }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        seccompProfile:
          type: "RuntimeDefault"
      {{- end }}
      volumes:
      {{- if .Values.logstash.enabled }}
      - name: config
        configMap:
          defaultMode: 0600
          name: filebeat-config
      {{- end }}
      - name: nginx-config
        configMap:
          defaultMode: 420
          name: nginx-config
      - name: var-run
        emptyDir: {}
      - name: var-cache-nginx
        emptyDir: {}
      - name: var-log-nginx
        emptyDir: {}
      - name: uwsgi-config
        configMap:
          defaultMode: 420
          name: uwsgi-config
      - name: nginx-invenio-assets
        emptyDir: {}
      {{- if .Values.persistence.enabled }}
      - name: shared-volume
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.name }}
      {{- end }}
      {{- if .Values.kerberos.enabled }}
      - name: kerberos-credentials-cache
        emptyDir: {}
      {{- end }}
      {{- if .Values.web.imagePullSecret }}
      imagePullSecrets:
        - name: {{ .Values.web.imagePullSecret }}
      {{- end }}
