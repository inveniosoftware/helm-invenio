---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-beat
spec:
  replicas: 1
  selector:
    matchLabels:
      app: worker-beat
  template:
    metadata:
      labels:
        app: worker-beat
    spec:
      containers:
      - name: worker-beat
        image: {{ required "Missing .Values.worker.image" .Values.worker.image }}
        command: [
          "/bin/bash",
          "-c",
          "celery -A {{ .Values.worker.app }} beat -l {{ .Values.worker.log_level }} -s {{ .Values.worker.celery_schedule }} --pidfile {{ .Values.worker.celery_pidfile }}"
        ]
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
        volumeMounts:
        - name: var-run-celery
          mountPath: {{ .Values.worker.run_mount_path }}
        {{- if .Values.persistence.enabled }}
        - mountPath: /opt/invenio/var/instance/data
          name: shared-volume
        {{- end }}
        envFrom:
        - configMapRef:
            name: invenio-config
        env:
        - name: TZ
          value: {{ required "Missing .Values.global.timezone" .Values.global.timezone }}
        - name: INVENIO_BROKER_URL
          value: {{ include "invenio.rabbitmq.uri" . }}
        - name: INVENIO_CELERY_BROKER_URL
          value: {{ include "invenio.rabbitmq.uri" . }}
        - name: INVENIO_SQLALCHEMY_DATABASE_URI
          value: {{ include "invenio.sqlAlchemyDbUri" . }}
        - name: INVENIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: invenio-secrets
              key: INVENIO_SECRET_KEY
        - name: INVENIO_SECURITY_LOGIN_SALT
          valueFrom:
            secretKeyRef:
              name: invenio-secrets
              key: INVENIO_SECURITY_LOGIN_SALT
        - name: INVENIO_CSRF_SECRET_SALT
          valueFrom:
            secretKeyRef:
              name: invenio-secrets
              key: INVENIO_CSRF_SECRET_SALT
        {{- if .Values.invenio.sentry.enabled }}
        - name: INVENIO_SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.invenio.sentry.secret_name }}
              key: SENTRY_DSN
        {{- end }}
        {{- if .Values.invenio.datacite.enabled }}
        - name: INVENIO_DATACITE_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.invenio.datacite.secret_name }}
              key: DATACITE_USERNAME
        - name: INVENIO_DATACITE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.invenio.datacite.secret_name }}
              key: DATACITE_PASSWORD
        {{- end }}
        {{- range .Values.invenio.extra_env_from_secret }}
        - name: {{ .name }}
          valueFrom:
            secretKeyRef:
              name: {{ .valueFrom.secretKeyRef.name }}
              key: {{ .valueFrom.secretKeyRef.key }}
        {{- end }}
        livenessProbe:
          exec:
            command:
              - /bin/bash
              - -c
              - "celery -A {{ .Values.worker.app }} inspect ping"
          initialDelaySeconds: 20
          timeoutSeconds: 30
        {{- if .Values.worker.resources }}
        resources: {{- toYaml .Values.workerBeat.resources | nindent 10 }}
        {{- else }}
        resources:
          requests:
            cpu: 500m
            memory: 200Mi
          limits:
            cpu: '2'
            memory: 500Mi
        {{- end }}
      {{- if .Values.invenio.podSecurityContext.enabled }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        seccompProfile:
          type: "RuntimeDefault"
      {{- end }}
      volumes:
      - name: var-run-celery
        emptyDir:
          medium: Memory
      {{- if .Values.persistence.enabled }}
      - name: shared-volume
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.name }}
      {{- end }}
      {{- if .Values.worker.imagePullSecret }}
      imagePullSecrets:
      - name: {{ .Values.worker.imagePullSecret }}
      {{- end }}
